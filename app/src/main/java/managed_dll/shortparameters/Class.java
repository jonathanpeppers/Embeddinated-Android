/**
 * ----------------------------------------------------------------------------
 * <auto-generated>
 * This is autogenerated code by Embeddinator-4000.
 * Do not edit this file or all your changes will be lost after re-generation.
 * </auto-generated>
 * ----------------------------------------------------------------------------
 */
package managed_dll.shortparameters;

import mono.embeddinator.*;
import com.sun.jna.*;

public class Class {
    public com.sun.jna.Pointer __object;

    public Class(com.sun.jna.Pointer object) { this.__object = object; }

    public Class() {
        __object = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_new();
        mono.embeddinator.Runtime.checkExceptions();
    }

    public int getX() {
        int __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_get_X(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public void setX(int value) {
        managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_set_X(__object, value);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public int getY() {
        int __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_get_Y(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public void setY(int value) {
        managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_set_Y(__object, value);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public String getA() {
        String __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_get_A(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public void setA(String value) {
        managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_set_A(__object, value);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public String getB() {
        String __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_get_B(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public void setB(String value) {
        managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_set_B(__object, value);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public double getC() {
        double __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_get_C(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public void setC(double value) {
        managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_set_C(__object, value);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public double getD() {
        double __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_get_D(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public void setD(double value) {
        managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_set_D(__object, value);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public float getE() {
        float __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_get_E(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public void setE(float value) {
        managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_set_E(__object, value);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public float getF() {
        float __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_get_F(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public void setF(float value) {
        managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_set_F(__object, value);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public UnsignedInt getG() {
        UnsignedInt __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_get_G(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public void setG(UnsignedInt value) {
        managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_set_G(__object, value);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public UnsignedInt getH() {
        UnsignedInt __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_get_H(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public void setH(UnsignedInt value) {
        managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_set_H(__object, value);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public short getI() {
        short __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_get_I(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public void setI(short value) {
        managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_set_I(__object, value);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public short getJ() {
        short __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_get_J(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public void setJ(short value) {
        managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_set_J(__object, value);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public UnsignedShort getK() {
        UnsignedShort __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_get_K(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public void setK(UnsignedShort value) {
        managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_set_K(__object, value);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public UnsignedShort getL() {
        UnsignedShort __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_get_L(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public void setL(UnsignedShort value) {
        managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_set_L(__object, value);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public long getM() {
        long __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_get_M(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public void setM(long value) {
        managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_set_M(__object, value);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public long getN() {
        long __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_get_N(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public void setN(long value) {
        managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_set_N(__object, value);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public UnsignedLong getO() {
        UnsignedLong __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_get_O(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public void setO(UnsignedLong value) {
        managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_set_O(__object, value);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public UnsignedLong getP() {
        UnsignedLong __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_get_P(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public void setP(UnsignedLong value) {
        managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_set_P(__object, value);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public char getQ() {
        char __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_get_Q(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public void setQ(char value) {
        managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_set_Q(__object, value);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public char getR() {
        char __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_get_R(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public void setR(char value) {
        managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_set_R(__object, value);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public boolean getS() {
        byte __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_get_S(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret != 0;
    }

    public void setS(boolean value) {
        managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_set_S(__object, (byte)(value? 1 : 0));
        mono.embeddinator.Runtime.checkExceptions();
    }

    public boolean getT() {
        byte __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_get_T(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret != 0;
    }

    public void setT(boolean value) {
        managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_set_T(__object, (byte)(value? 1 : 0));
        mono.embeddinator.Runtime.checkExceptions();
    }

    public boolean noDuplicateTypes(String a, double c, float e, UnsignedInt g, short i, UnsignedShort k, long m, UnsignedLong o, char q, boolean s) {
        byte __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_NoDuplicateTypes(__object, a, c, e, g, i, k, m, o, q, (byte)(s? 1 : 0));
        mono.embeddinator.Runtime.checkExceptions();
        return __ret != 0;
    }

    public int twoInt(int x, int y) {
        int __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_TwoInt(__object, x, y);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public String twoString(String a, String b) {
        String __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_TwoString(__object, a, b);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public double twoDouble(double c, double d) {
        double __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_TwoDouble(__object, c, d);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public float twoFloat(float e, float f) {
        float __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_TwoFloat(__object, e, f);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public UnsignedInt twoUint(UnsignedInt g, UnsignedInt h) {
        UnsignedInt __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_TwoUint(__object, g, h);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public int twoShort(short i, short j) {
        int __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_TwoShort(__object, i, j);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public int twoUshort(UnsignedShort k, UnsignedShort l) {
        int __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_TwoUshort(__object, k, l);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public long twoLong(long m, long n) {
        long __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_TwoLong(__object, m, n);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public UnsignedLong twoUlong(UnsignedLong o, UnsignedLong p) {
        UnsignedLong __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_TwoUlong(__object, o, p);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public int twoChar(char q, char r) {
        int __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_TwoChar(__object, q, r);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public boolean twoBool(boolean s, boolean t) {
        byte __ret = managed_dll.Native_managed_dll.INSTANCE.ShortParameters_Class_TwoBool(__object, (byte)(s? 1 : 0), (byte)(t? 1 : 0));
        mono.embeddinator.Runtime.checkExceptions();
        return __ret != 0;
    }
}
