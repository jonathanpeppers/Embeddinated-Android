/**
 * ----------------------------------------------------------------------------
 * <auto-generated>
 * This is autogenerated code by Embeddinator-4000.
 * Do not edit this file or all your changes will be lost after re-generation.
 * </auto-generated>
 * ----------------------------------------------------------------------------
 */
package managed_dll.methods;

import mono.embeddinator.*;
import com.sun.jna.*;

public class DuplicateMethods {
    public com.sun.jna.Pointer __object;

    public DuplicateMethods(com.sun.jna.Pointer object) { this.__object = object; }

    public DuplicateMethods() {
        __object = managed_dll.Native_managed_dll.INSTANCE.Methods_DuplicateMethods_new();
        mono.embeddinator.Runtime.checkExceptions();
    }

    public int doIt() {
        int __ret = managed_dll.Native_managed_dll.INSTANCE.Methods_DuplicateMethods_DoIt(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public int doIt_1(int i) {
        int __ret = managed_dll.Native_managed_dll.INSTANCE.Methods_DuplicateMethods_DoIt(__object, i);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public int doIt_2(String s) {
        int __ret = managed_dll.Native_managed_dll.INSTANCE.Methods_DuplicateMethods_DoIt(__object, s);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public int doIt_3(int i, int j) {
        int __ret = managed_dll.Native_managed_dll.INSTANCE.Methods_DuplicateMethods_DoIt(__object, i, j);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public boolean find(String name) {
        byte __ret = managed_dll.Native_managed_dll.INSTANCE.Methods_DuplicateMethods_Find(__object, name);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret != 0;
    }

    public boolean find_1(String firstName, String lastName) {
        byte __ret = managed_dll.Native_managed_dll.INSTANCE.Methods_DuplicateMethods_Find(__object, firstName, lastName);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret != 0;
    }
}
