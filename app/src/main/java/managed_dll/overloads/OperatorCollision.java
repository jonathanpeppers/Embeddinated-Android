/**
 * ----------------------------------------------------------------------------
 * <auto-generated>
 * This is autogenerated code by Embeddinator-4000.
 * Do not edit this file or all your changes will be lost after re-generation.
 * </auto-generated>
 * ----------------------------------------------------------------------------
 */
package managed_dll.overloads;

import mono.embeddinator.*;
import com.sun.jna.*;

public class OperatorCollision {
    public com.sun.jna.Pointer __object;

    public OperatorCollision(com.sun.jna.Pointer object) { this.__object = object; }

    public OperatorCollision(int val) {
        __object = managed_dll.Native_managed_dll.INSTANCE.Overloads_OperatorCollision_new(val);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public int getValue() {
        int __ret = managed_dll.Native_managed_dll.INSTANCE.Overloads_OperatorCollision_get_Value(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public static managed_dll.overloads.OperatorCollision opAddition(managed_dll.overloads.OperatorCollision c1, managed_dll.overloads.OperatorCollision c2) {
        com.sun.jna.Pointer __ret = managed_dll.Native_managed_dll.INSTANCE.Overloads_OperatorCollision_op_Addition(c1 == null ? null : c1.__object, c2 == null ? null : c2.__object);
        mono.embeddinator.Runtime.checkExceptions();
        return (__ret == com.sun.jna.Pointer.NULL ? null : new managed_dll.overloads.OperatorCollision(__ret));
    }

    public static managed_dll.overloads.OperatorCollision add(managed_dll.overloads.OperatorCollision c1, managed_dll.overloads.OperatorCollision c2) {
        com.sun.jna.Pointer __ret = managed_dll.Native_managed_dll.INSTANCE.Overloads_OperatorCollision_Add(c1 == null ? null : c1.__object, c2 == null ? null : c2.__object);
        mono.embeddinator.Runtime.checkExceptions();
        return (__ret == com.sun.jna.Pointer.NULL ? null : new managed_dll.overloads.OperatorCollision(__ret));
    }

    public static managed_dll.overloads.OperatorCollision opSubtraction(managed_dll.overloads.OperatorCollision c1, managed_dll.overloads.OperatorCollision c2) {
        com.sun.jna.Pointer __ret = managed_dll.Native_managed_dll.INSTANCE.Overloads_OperatorCollision_op_Subtraction(c1 == null ? null : c1.__object, c2 == null ? null : c2.__object);
        mono.embeddinator.Runtime.checkExceptions();
        return (__ret == com.sun.jna.Pointer.NULL ? null : new managed_dll.overloads.OperatorCollision(__ret));
    }

    public static managed_dll.overloads.OperatorCollision multiply(managed_dll.overloads.OperatorCollision c1, managed_dll.overloads.OperatorCollision c2) {
        com.sun.jna.Pointer __ret = managed_dll.Native_managed_dll.INSTANCE.Overloads_OperatorCollision_Multiply(c1 == null ? null : c1.__object, c2 == null ? null : c2.__object);
        mono.embeddinator.Runtime.checkExceptions();
        return (__ret == com.sun.jna.Pointer.NULL ? null : new managed_dll.overloads.OperatorCollision(__ret));
    }
}
