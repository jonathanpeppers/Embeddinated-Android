/**
 * ----------------------------------------------------------------------------
 * <auto-generated>
 * This is autogenerated code by Embeddinator-4000.
 * Do not edit this file or all your changes will be lost after re-generation.
 * </auto-generated>
 * ----------------------------------------------------------------------------
 */
package managed_dll.overloads;

import mono.embeddinator.*;
import com.sun.jna.*;

public class EqualOverrides {
    public com.sun.jna.Pointer __object;

    public EqualOverrides(com.sun.jna.Pointer object) { this.__object = object; }

    public EqualOverrides(int val) {
        __object = managed_dll.Native_managed_dll.INSTANCE.Overloads_EqualOverrides_new(val);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public int getValue() {
        int __ret = managed_dll.Native_managed_dll.INSTANCE.Overloads_EqualOverrides_get_Value(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public static boolean opEquality(managed_dll.overloads.EqualOverrides a, managed_dll.overloads.EqualOverrides b) {
        byte __ret = managed_dll.Native_managed_dll.INSTANCE.Overloads_EqualOverrides_op_Equality(a == null ? null : a.__object, b == null ? null : b.__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret != 0;
    }

    public static boolean opInequality(managed_dll.overloads.EqualOverrides a, managed_dll.overloads.EqualOverrides b) {
        byte __ret = managed_dll.Native_managed_dll.INSTANCE.Overloads_EqualOverrides_op_Inequality(a == null ? null : a.__object, b == null ? null : b.__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret != 0;
    }
}
