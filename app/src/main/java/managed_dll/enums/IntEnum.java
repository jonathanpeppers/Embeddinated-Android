/**
 * ----------------------------------------------------------------------------
 * <auto-generated>
 * This is autogenerated code by Embeddinator-4000.
 * Do not edit this file or all your changes will be lost after re-generation.
 * </auto-generated>
 * ----------------------------------------------------------------------------
 */
package managed_dll.enums;

import mono.embeddinator.*;
import com.sun.jna.*;

public final class IntEnum {
    public static final IntEnum Min = new IntEnum((int)-2147483648);
    public static final IntEnum Max = new IntEnum((int)2147483647);

    private final int id;
    IntEnum(int id) { this.id = id; }
    public int getValue() { return id; }

    public static IntEnum fromOrdinal(int n) {
        return valuesMap.containsKey(n) ? valuesMap.get(n) : new IntEnum(n);
    }

    private static final java.util.Map<Integer, IntEnum> valuesMap = 
        new java.util.HashMap<Integer, IntEnum>();

    static {
        try {
            java.lang.reflect.Field[] constants = IntEnum.class.getFields();
            for (final java.lang.reflect.Field field : constants) {
                IntEnum item = (IntEnum) field.get(null);
                valuesMap.put(item.getValue(), item);
            }
        } catch(java.lang.IllegalAccessException ex) {
        }
    }
}
